{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["const debug = require('debug')('art-template');\nconst template = require('art-template');\n\n\nconst defaultSettings = {\n    debug: process.env.NODE_ENV !== 'production',\n    writeResp: true\n};\n\n/**\n * set app.context.render\n * @param {Application} app      koa application instance\n * @param {Object}      settings user settings\n */\nexports = module.exports = function (app, settings = {}) {\n    if (app.context.render) {\n        return;\n    }\n\n    settings = Object.assign({}, defaultSettings, settings);\n\n    function render(filename, data) {\n        debug(`render: ${filename}`);\n        settings.filename = filename;\n        const render = template.compile(settings);\n        return render(data);\n    }\n\n\n    app.context.render = function (view, _context) {\n        const ctx = this;\n        const context = Object.assign({}, ctx.state, _context);\n        const html = render(view, context);\n        const writeResp = context.writeResp === false ? false : (context.writeResp || settings.writeResp);\n\n        if (writeResp) {\n            ctx.type = 'html';\n            ctx.body = html;\n        } else {\n            return html;\n        }\n\n    };\n};\n\n\nexports.template = template;"]}